# Generated by Django 4.1.5 on 2023-02-16 14:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SpringUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('university', models.CharField(max_length=100, verbose_name='University')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Personal Website')),
                ('description', models.TextField(help_text='Please provide a brief description of why you need access to the benchmark.', max_length=1000, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
                ('visibility', models.CharField(choices=[('PUBL', 'Public'), ('PRIV', 'Private'), ('ANON', 'Anonymous')], default='PRIV', max_length=4)),
                ('citation', models.CharField(blank=True, max_length=400)),
                ('method_type', models.CharField(choices=[('ST', 'Stereo'), ('FL', 'Optical Flow'), ('SF', 'Scene Flow')], max_length=2)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('err_1px_D1_highdetail', models.FloatField(default=-1, verbose_name='error 1px D1 highdetail')),
                ('err_1px_D1_lowdetail', models.FloatField(default=-1, verbose_name='error 1px D1 lowdetail')),
                ('err_1px_D1_matched', models.FloatField(default=-1, verbose_name='error 1px D1 matched')),
                ('err_1px_D1_notsky', models.FloatField(default=-1, verbose_name='error 1px D1 notsky')),
                ('err_1px_D1_sky', models.FloatField(default=-1, verbose_name='error 1px D1 sky')),
                ('err_1px_D1_total', models.FloatField(default=-1, verbose_name='error 1px D1 total')),
                ('err_1px_D1_unmatched', models.FloatField(default=-1, verbose_name='error 1px D1 unmatched')),
                ('err_1px_D2_highdetail', models.FloatField(default=-1, verbose_name='error 1px D2 highdetail')),
                ('err_1px_D2_lowdetail', models.FloatField(default=-1, verbose_name='error 1px D2 lowdetail')),
                ('err_1px_D2_matched', models.FloatField(default=-1, verbose_name='error 1px D2 matched')),
                ('err_1px_D2_notsky', models.FloatField(default=-1, verbose_name='error 1px D2 notsky')),
                ('err_1px_D2_sky', models.FloatField(default=-1, verbose_name='error 1px D2 sky')),
                ('err_1px_D2_total', models.FloatField(default=-1, verbose_name='error 1px D2 total')),
                ('err_1px_D2_unmatched', models.FloatField(default=-1, verbose_name='error 1px D2 unmatched')),
                ('err_1px_Fl_highdetail', models.FloatField(default=-1, verbose_name='error 1px Fl highdetail')),
                ('err_1px_Fl_lowdetail', models.FloatField(default=-1, verbose_name='error 1px Fl lowdetail')),
                ('err_1px_Fl_matched', models.FloatField(default=-1, verbose_name='error 1px Fl matched')),
                ('err_1px_Fl_nonrigid', models.FloatField(default=-1, verbose_name='error 1px Fl nonrigid')),
                ('err_1px_Fl_notsky', models.FloatField(default=-1, verbose_name='error 1px Fl notsky')),
                ('err_1px_Fl_rigid', models.FloatField(default=-1, verbose_name='error 1px Fl rigid')),
                ('err_1px_Fl_sky', models.FloatField(default=-1, verbose_name='error 1px Fl sky')),
                ('err_1px_Fl_total', models.FloatField(default=-1, verbose_name='error 1px Fl total')),
                ('err_1px_Fl_unmatched', models.FloatField(default=-1, verbose_name='error 1px Fl unmatched')),
                ('err_1px_SF_highdetail', models.FloatField(default=-1, verbose_name='error 1px SF highdetail')),
                ('err_1px_SF_lowdetail', models.FloatField(default=-1, verbose_name='error 1px SF lowdetail')),
                ('err_1px_SF_matched', models.FloatField(default=-1, verbose_name='error 1px SF matched')),
                ('err_1px_SF_nonrigid', models.FloatField(default=-1, verbose_name='error 1px SF nonrigid')),
                ('err_1px_SF_notsky', models.FloatField(default=-1, verbose_name='error 1px SF notsky')),
                ('err_1px_SF_rigid', models.FloatField(default=-1, verbose_name='error 1px SF rigid')),
                ('err_1px_SF_sky', models.FloatField(default=-1, verbose_name='error 1px SF sky')),
                ('err_1px_SF_total', models.FloatField(default=-1, verbose_name='error 1px SF total')),
                ('err_1px_SF_unmatched', models.FloatField(default=-1, verbose_name='error 1px SF unmatched')),
                ('err_Abs_D1_highdetail', models.FloatField(default=-1, verbose_name='error Abs D1 highdetail')),
                ('err_Abs_D1_lowdetail', models.FloatField(default=-1, verbose_name='error Abs D1 lowdetail')),
                ('err_Abs_D1_matched', models.FloatField(default=-1, verbose_name='error Abs D1 matched')),
                ('err_Abs_D1_notsky', models.FloatField(default=-1, verbose_name='error Abs D1 notsky')),
                ('err_Abs_D1_sky', models.FloatField(default=-1, verbose_name='error Abs D1 sky')),
                ('err_Abs_D1_total', models.FloatField(default=-1, verbose_name='error Abs D1 total')),
                ('err_Abs_D1_unmatched', models.FloatField(default=-1, verbose_name='error Abs D1 unmatched')),
                ('err_Abs_D2_highdetail', models.FloatField(default=-1, verbose_name='error Abs D2 highdetail')),
                ('err_Abs_D2_lowdetail', models.FloatField(default=-1, verbose_name='error Abs D2 lowdetail')),
                ('err_Abs_D2_matched', models.FloatField(default=-1, verbose_name='error Abs D2 matched')),
                ('err_Abs_D2_notsky', models.FloatField(default=-1, verbose_name='error Abs D2 notsky')),
                ('err_Abs_D2_sky', models.FloatField(default=-1, verbose_name='error Abs D2 sky')),
                ('err_Abs_D2_total', models.FloatField(default=-1, verbose_name='error Abs D2 total')),
                ('err_Abs_D2_unmatched', models.FloatField(default=-1, verbose_name='error Abs D2 unmatched')),
                ('err_D1_highdetail', models.FloatField(default=-1, verbose_name='error D1 highdetail')),
                ('err_D1_lowdetail', models.FloatField(default=-1, verbose_name='error D1 lowdetail')),
                ('err_D1_matched', models.FloatField(default=-1, verbose_name='error D1 matched')),
                ('err_D1_notsky', models.FloatField(default=-1, verbose_name='error D1 notsky')),
                ('err_D1_sky', models.FloatField(default=-1, verbose_name='error D1 sky')),
                ('err_D1_total', models.FloatField(default=-1, verbose_name='error D1 total')),
                ('err_D1_unmatched', models.FloatField(default=-1, verbose_name='error D1 unmatched')),
                ('err_D2_highdetail', models.FloatField(default=-1, verbose_name='error D2 highdetail')),
                ('err_D2_lowdetail', models.FloatField(default=-1, verbose_name='error D2 lowdetail')),
                ('err_D2_matched', models.FloatField(default=-1, verbose_name='error D2 matched')),
                ('err_D2_notsky', models.FloatField(default=-1, verbose_name='error D2 notsky')),
                ('err_D2_sky', models.FloatField(default=-1, verbose_name='error D2 sky')),
                ('err_D2_total', models.FloatField(default=-1, verbose_name='error D2 total')),
                ('err_D2_unmatched', models.FloatField(default=-1, verbose_name='error D2 unmatched')),
                ('err_EPE_Fl_highdetail', models.FloatField(default=-1, verbose_name='error EPE Fl highdetail')),
                ('err_EPE_Fl_lowdetail', models.FloatField(default=-1, verbose_name='error EPE Fl lowdetail')),
                ('err_EPE_Fl_matched', models.FloatField(default=-1, verbose_name='error EPE Fl matched')),
                ('err_EPE_Fl_nonrigid', models.FloatField(default=-1, verbose_name='error EPE Fl nonrigid')),
                ('err_EPE_Fl_notsky', models.FloatField(default=-1, verbose_name='error EPE Fl notsky')),
                ('err_EPE_Fl_rigid', models.FloatField(default=-1, verbose_name='error EPE Fl rigid')),
                ('err_EPE_Fl_sky', models.FloatField(default=-1, verbose_name='error EPE Fl sky')),
                ('err_EPE_Fl_total', models.FloatField(default=-1, verbose_name='error EPE Fl total')),
                ('err_EPE_Fl_unmatched', models.FloatField(default=-1, verbose_name='error EPE Fl unmatched')),
                ('err_Fl_highdetail', models.FloatField(default=-1, verbose_name='error Fl highdetail')),
                ('err_Fl_lowdetail', models.FloatField(default=-1, verbose_name='error Fl lowdetail')),
                ('err_Fl_matched', models.FloatField(default=-1, verbose_name='error Fl matched')),
                ('err_Fl_nonrigid', models.FloatField(default=-1, verbose_name='error Fl nonrigid')),
                ('err_Fl_notsky', models.FloatField(default=-1, verbose_name='error Fl notsky')),
                ('err_Fl_rigid', models.FloatField(default=-1, verbose_name='error Fl rigid')),
                ('err_Fl_sky', models.FloatField(default=-1, verbose_name='error Fl sky')),
                ('err_Fl_total', models.FloatField(default=-1, verbose_name='error Fl total')),
                ('err_Fl_unmatched', models.FloatField(default=-1, verbose_name='error Fl unmatched')),
                ('err_SF_highdetail', models.FloatField(default=-1, verbose_name='error SF highdetail')),
                ('err_SF_lowdetail', models.FloatField(default=-1, verbose_name='error SF lowdetail')),
                ('err_SF_matched', models.FloatField(default=-1, verbose_name='error SF matched')),
                ('err_SF_nonrigid', models.FloatField(default=-1, verbose_name='error SF nonrigid')),
                ('err_SF_notsky', models.FloatField(default=-1, verbose_name='error SF notsky')),
                ('err_SF_rigid', models.FloatField(default=-1, verbose_name='error SF rigid')),
                ('err_SF_sky', models.FloatField(default=-1, verbose_name='error SF sky')),
                ('err_SF_total', models.FloatField(default=-1, verbose_name='error SF total')),
                ('err_SF_unmatched', models.FloatField(default=-1, verbose_name='error SF unmatched')),
                ('err_WAUC_Fl_highdetail', models.FloatField(default=-1, verbose_name='error WAUC Fl highdetail')),
                ('err_WAUC_Fl_lowdetail', models.FloatField(default=-1, verbose_name='error WAUC Fl lowdetail')),
                ('err_WAUC_Fl_matched', models.FloatField(default=-1, verbose_name='error WAUC Fl matched')),
                ('err_WAUC_Fl_nonrigid', models.FloatField(default=-1, verbose_name='error WAUC Fl nonrigid')),
                ('err_WAUC_Fl_notsky', models.FloatField(default=-1, verbose_name='error WAUC Fl notsky')),
                ('err_WAUC_Fl_rigid', models.FloatField(default=-1, verbose_name='error WAUC Fl rigid')),
                ('err_WAUC_Fl_sky', models.FloatField(default=-1, verbose_name='error WAUC Fl sky')),
                ('err_WAUC_Fl_total', models.FloatField(default=-1, verbose_name='error WAUC Fl total')),
                ('err_WAUC_Fl_unmatched', models.FloatField(default=-1, verbose_name='error WAUC Fl unmatched')),
                ('imghash', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('process_status', models.CharField(choices=[('SUCCESS', 'Success'), ('WAIT_UPL', 'Waiting for upload...'), ('WAIT_PROC', 'Waiting for evaluation...'), ('FAIL', 'There was a problem with the submission.')], max_length=10)),
                ('err_1px_D1_s0_10', models.FloatField(default=-1, verbose_name='error 1px D1 s0-10')),
                ('err_1px_D1_s10_40', models.FloatField(default=-1, verbose_name='error 1px D1 s10-40')),
                ('err_1px_D1_s40', models.FloatField(default=-1, verbose_name='error 1px D1 s40+')),
                ('err_1px_D2_s0_10', models.FloatField(default=-1, verbose_name='error 1px D2 s0-10')),
                ('err_1px_D2_s10_40', models.FloatField(default=-1, verbose_name='error 1px D2 s10-40')),
                ('err_1px_D2_s40', models.FloatField(default=-1, verbose_name='error 1px D2 s40+')),
                ('err_1px_Fl_s0_10', models.FloatField(default=-1, verbose_name='error 1px Fl s0-10')),
                ('err_1px_Fl_s10_40', models.FloatField(default=-1, verbose_name='error 1px Fl s10-40')),
                ('err_1px_Fl_s40', models.FloatField(default=-1, verbose_name='error 1px Fl s40+')),
                ('err_1px_SF_s0_10', models.FloatField(default=-1, verbose_name='error 1px SF s0-10')),
                ('err_1px_SF_s10_40', models.FloatField(default=-1, verbose_name='error 1px SF s10-40')),
                ('err_1px_SF_s40', models.FloatField(default=-1, verbose_name='error 1px SF s40+')),
                ('err_Abs_D1_s0_10', models.FloatField(default=-1, verbose_name='error Abs D1 s0-10')),
                ('err_Abs_D1_s10_40', models.FloatField(default=-1, verbose_name='error Abs D1 s10-40')),
                ('err_Abs_D1_s40', models.FloatField(default=-1, verbose_name='error Abs D1 s40+')),
                ('err_Abs_D2_s0_10', models.FloatField(default=-1, verbose_name='error Abs D2 s0-10')),
                ('err_Abs_D2_s10_40', models.FloatField(default=-1, verbose_name='error Abs D2 s10-40')),
                ('err_Abs_D2_s40', models.FloatField(default=-1, verbose_name='error Abs D2 s40+')),
                ('err_D1_s0_10', models.FloatField(default=-1, verbose_name='error D1 s0-10')),
                ('err_D1_s10_40', models.FloatField(default=-1, verbose_name='error D1 s10-40')),
                ('err_D1_s40', models.FloatField(default=-1, verbose_name='error D1 s40+')),
                ('err_D2_s0_10', models.FloatField(default=-1, verbose_name='error D2 s0-10')),
                ('err_D2_s10_40', models.FloatField(default=-1, verbose_name='error D2 s10-40')),
                ('err_D2_s40', models.FloatField(default=-1, verbose_name='error D2 s40+')),
                ('err_EPE_Fl_s0_10', models.FloatField(default=-1, verbose_name='error EPE Fl s0-10')),
                ('err_EPE_Fl_s10_40', models.FloatField(default=-1, verbose_name='error EPE Fl s10-40')),
                ('err_EPE_Fl_s40', models.FloatField(default=-1, verbose_name='error EPE Fl s40+')),
                ('err_Fl_s0_10', models.FloatField(default=-1, verbose_name='error Fl s0-10')),
                ('err_Fl_s10_40', models.FloatField(default=-1, verbose_name='error Fl s10-40')),
                ('err_Fl_s40', models.FloatField(default=-1, verbose_name='error Fl s40+')),
                ('err_SF_s0_10', models.FloatField(default=-1, verbose_name='error SF s0-10')),
                ('err_SF_s10_40', models.FloatField(default=-1, verbose_name='error SF s10-40')),
                ('err_SF_s40', models.FloatField(default=-1, verbose_name='error SF s40+')),
                ('err_WAUC_Fl_s0_10', models.FloatField(default=-1, verbose_name='error WAUC Fl s0-10')),
                ('err_WAUC_Fl_s10_40', models.FloatField(default=-1, verbose_name='error WAUC Fl s10-40')),
                ('err_WAUC_Fl_s40', models.FloatField(default=-1, verbose_name='error WAUC Fl s40+')),
            ],
        ),
    ]
